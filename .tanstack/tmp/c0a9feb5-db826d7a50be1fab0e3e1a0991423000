/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as CenteredRouteImport } from './routes/_centered'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CenteredDashboardNewIndexRouteImport } from './routes/_centered/dashboard/new/index'

const CenteredRoute = CenteredRouteImport.update({
  id: '/_centered',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CenteredDashboardNewIndexRoute =
  CenteredDashboardNewIndexRouteImport.update({
    id: '/dashboard/new/',
    path: '/dashboard/new/',
    getParentRoute: () => CenteredRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard/new': typeof CenteredDashboardNewIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard/new': typeof CenteredDashboardNewIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_centered': typeof CenteredRouteWithChildren
  '/_centered/dashboard/new/': typeof CenteredDashboardNewIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/dashboard/new'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/dashboard/new'
  id: '__root__' | '/' | '/_centered' | '/_centered/dashboard/new/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CenteredRoute: typeof CenteredRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_centered': {
      id: '/_centered'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof CenteredRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_centered/dashboard/new/': {
      id: '/_centered/dashboard/new/'
      path: '/dashboard/new'
      fullPath: '/dashboard/new'
      preLoaderRoute: typeof CenteredDashboardNewIndexRouteImport
      parentRoute: typeof CenteredRoute
    }
  }
}

interface CenteredRouteChildren {
  CenteredDashboardNewIndexRoute: typeof CenteredDashboardNewIndexRoute
}

const CenteredRouteChildren: CenteredRouteChildren = {
  CenteredDashboardNewIndexRoute: CenteredDashboardNewIndexRoute,
}

const CenteredRouteWithChildren = CenteredRoute._addFileChildren(
  CenteredRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CenteredRoute: CenteredRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
